- id: config-git-updated
  alias: 'Config Git Repo Updated'
  trigger:
    - platform: webhook
      webhook_id: "some_hook_id"
  action:
    - delay: '00:00:01'
    - service: shell_command.git_pull_config
    - service: automation.reload
    - service: input_datetime.reload
    - service: template.reload
    - service: timer.reload
    - service: logbook.log
      data_template:
        name: "Config Git Repository Updated: "
        message: "{{trigger.to_state.name}} changed from {{trigger.from_state.state}} to {{trigger.to_state.state}} by {{ trigger.to_state.attributes.source }}"
    - service: notify.persistent_notification
      data_template:
        title: Config Reloaded
        message: Configuration reloaded from git repository

- id: hall-sensor
  mode: restart
  alias: Hall Sensor
  trigger:
    - type: motion
      platform: device
      entity_id: binary_sensor.hms1_motion
      device_id: 381d86e848b74e791ccbc32aa58ddb90
      domain: binary_sensor
  condition:
    - condition: sun
      after: sunset
  action:
    - service: light.turn_on
      target:
        area_id: hall
    - delay: "00:04:00"
    - service: light.turn_off
      target:
        area_id: hall

- alias: Leave Home
  id: "leave-home"
  mode: single
  trigger:
    - platform: zone
      entity_id: person.harry
      zone: zone.home
      event: leave
    - platform: zone
      entity_id: person.becca
      zone: zone.home
      event: leave
  action:
    - service: light.turn_off
      target:
        entity_id: all
    - service: switch.turn_off
      target:
        entity_id: all
  condition:
    - condition: not
      conditions:
        - condition: or
          conditions:
            - condition: zone
              entity_id: person.becca
              zone: zone.home
            - condition: zone
              entity_id: person.harry
              zone: zone.home


- id: return-home
  alias: Return Home After Sunset
  trigger:
    - platform: zone
      entity_id: person.harry
      zone: zone.home
      event: enter
  condition:
    - condition: sun
      after: sunset
  action:
    - service: light.turn_on
      target:
        entity_id: light.living_room_ceiling_group
    - service: light.turn_on
      target:
        entity_id: light.hand_lamp
    - service: light.turn_on
      target:
        area_id: hall
- id: sunset
  alias: Sunset
  trigger:
    platform: sun
    event: sunset
  condition:
    - condition: zone
      entity_id: person.harry
      zone: zone.home
  action:
    - service: light.turn_on
      target:
        entity_id: light.living_room_ceiling_group
    - service: light.turn_on
      target:
        entity_id: light.hand_lamp

- id: turn-off-night
  alias: Turn Everything off At Night
  trigger:
    platform: time
    at: "00:00:00"
  action:
    - service: light.turn_off
      entity_id: all
    - service: switch.turn_off
      entity_id: all

- id: work-event-start
  alias: Work Event Started
  trigger:
    platform: calendar
    event: start
    offset: "-0:0:0"
    entity_id: calendar.harry_martland_booking_com
  condition:
    - condition: zone
      entity_id: person.harry
      zone: zone.home
  action:
    service: tts.google_translate_say
    data:
      entity_id: media_player.living_room_speaker
      cache: true
      message: Next meeting starting now
- id: low-battery
  alias: Low battery level detection & notification for all battery sensors
  description: ''
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      actions:
        - service: notify.mobile_app_pixel_6
          data:
            message: '{{sensors}} is low battery please replace'
            title: Low Battery {{sensors}}

- id: remote-backup
  alias: Remote Backup
  trigger:
    platform: state
    entity_id:
      - schedule.backup
    attribute: next_event
  action:
    - service: hassio.backup_full

- id: on-tv-when-start-playing
  alias: Turn on tv when start playing
  description: ""
  trigger:
    - platform: state
      entity_id:
        - media_player.living_room_tv
      to: playing
  condition:
    condition: state
    entity_id: switch.tv
    state: "off"
  action:
    - service: switch.turn_on
      target:
        entity_id: switch.tv
  mode: single

- id: stop-casting-tv-off
  alias: "Stop casting when tv is turn off"
  mode: single
  trigger:
    - platform: state
      entity_id:
        - switch.tv
      to: "off"
  action:
    - service: media_player.turn_off
      target:
        entity_id: media_player.living_room_tv

- id: "bed-time"
  alias: "Bed Time"
  description: "Bed time, turn on bedroom side lights"
  mode: single
  trigger:
    - platform: time
      at: "22:00:00"
  condition:
    - condition: zone
      entity_id: person.harry
      zone: zone.home
  action:
    - service: light.turn_on
      target:
        entity_id: light.bedroom_side_lamp_group
    - service: light.turn_off
      target:
        entity_id: light.hand_lamp

- id: 'update-last-vacuumed'
  alias: 'Update Last Vacuumed'
  description: ''
  trigger:
    - platform: state
      entity_id:
        - vacuum.becki
      to: cleaning
  action:
    - delay:
        hours: 0
        minutes: 5
        seconds: 0
        milliseconds: 0
    - if:
        - condition: state
          entity_id: vacuum.becki
          state: cleaning
      then:
        - service: input_datetime.set_datetime
          data_template:
            datetime: '{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}'
          target:
            entity_id: input_datetime.last_vacuumed
  mode: single

- id: 'vacuum-2-days'
  alias: Vacuum Every 2 Days when Out the House
  description: ''
  trigger:
    - platform: zone
      entity_id: person.harry
      zone: zone.home
      event: leave
  condition:
    - condition: template
      value_template: '{{now().timestamp() > (strptime(states(''input_datetime.last_vacuumed''),
    "%Y-%m-%d %H:%M:%S")+ timedelta(days=2)).timestamp() }}'
  action:
    - delay:
        hours: 0
        minutes: 30
        seconds: 0
        milliseconds: 0
    - if:
        - condition: not
          conditions:
            - condition: zone
              entity_id: person.harry
              zone: zone.home
      then:
        - service: vacuum.start
          data: {}
          target:
            entity_id: vacuum.becki
  mode: single

- id: restart-timer-tag-scanned
  alias: Restart Timer Tag Scanned
  description: ""
  trigger:
    - platform: event
      event_type: tag_scanned
  condition:
    - condition: template
      value_template: "{{ trigger.event.data.tag_id.startswith('timer.start:') }}"
  action:
    - service: timer.start
      data: {}
      target:
        entity_id: "{{ trigger.event.data.tag_id[12:] }}"
  mode: single

- id: date-time-tag-scanned
  alias: Date Time Tag Scanned
  description: "Set a date time value when scanned"
  trigger:
    - platform: event
      event_type: tag_scanned
  condition:
    - condition: template
      value_template: "{{ trigger.event.data.tag_id.startswith('datetime.set:') }}"
  action:
    - service: input_datetime.set_datetime
      data_template:
        datetime: '{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}'
      target:
        entity_id: "{{ trigger.event.data.tag_id[13:] }}"
  mode: single

- alias: "Automatically update core patches"
  id: auto-update-core-patches
  mode: single
  trigger:
    - platform: state
      entity_id:
        - update.home_assistant_core_update
      attribute: latest_version
    - platform: homeassistant
      event: start
  condition:
    - condition: template
      value_template: >+
        {%set installed = state_attr("update.home_assistant_core_update", "installed_version").split(".") %}
        {%set latest = state_attr("update.home_assistant_core_update", "latest_version").split(".") %}
        {{installed[0] == latest[0] and installed[1] == latest[1] and installed[2] != latest[2]}}
  action:
    - service: notify.mobile_app_pixel_6
      data:
        message: HA Core Will be updated at 2AM
    - wait_for_trigger:
        - platform: time
          at: "03:00:00"
      continue_on_timeout: true
      timeout:
        hours: 30
        minutes: 0
        seconds: 0
        milliseconds: 0
    - service: update.install
      data:
        backup: true
      target:
        entity_id: update.home_assistant_core_update
    - service: notify.mobile_app_pixel_6
      data:
        message: HA Core has been updated

- alias: "Automatically update OS patches"
  id: auto-update-os-patches
  mode: single
  trigger:
    - platform: state
      entity_id:
        - update.home_assistant_operating_system_update
      attribute: latest_version
    - platform: homeassistant
      event: start
  condition:
    - condition: template
      value_template: >+
        {%set installed = state_attr("update.home_assistant_operating_system_update", "installed_version").split(".") %}
        {%set latest = state_attr("update.home_assistant_operating_system_update", "latest_version").split(".") %}
        {{installed[0] == latest[0] and installed[1] != latest[1]}}
  action:
    - service: notify.mobile_app_pixel_6
      data:
        message: HA OS Will be updated at 2AM
    - wait_for_trigger:
        - platform: time
          at: "02:00:00"
      continue_on_timeout: true
      timeout:
        hours: 30
        minutes: 0
        seconds: 0
        milliseconds: 0
    - service: update.install
      target:
        entity_id: update.home_assistant_operating_system_update
    - service: notify.mobile_app_pixel_6
      data:
        message: HA OS has been updated

- id: washing-machine-finished
  alias: "Notify that the washing machine has finished"
  mode: single
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.washing_machine
  action:
    - service: notify.mobile_app_pixel_6
      data:
        message: Washing Machine has Finished
        data:
          ttl: 0
          priority: high
    - service: tts.google_translate_say
      data:
        entity_id: media_player.living_room_speaker
        cache: true
        message: The washing machine has finished

- alias: ZHA On Off Button pressed
  id: "zha-on-off-button-pressed"
  mode: queued
  max: 10
  trigger:
    - platform: event
      event_type: zha_event
      event_data:
        command: "on"
    - platform: event
      event_type: zha_event
      event_data:
        command: "off"
  condition:
    - condition: template
      value_template: "{{device_attr(trigger.event.data.device_id, 'name_by_user').startswith('SW')}}"
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: "{{trigger.event.data.command == \"on\"}}"
              alias: "On"
          sequence:
            - service: light.turn_on
              target:
                entity_id: "{{device_attr(trigger.event.data.device_id, 'name_by_user').split(':')[1]}}"
        - conditions:
            - condition: template
              value_template: "{{trigger.event.data.command == \"off\"}}"
              alias: "Off"
          sequence:
            - service: light.turn_off
              target:
                entity_id: "{{device_attr(trigger.event.data.device_id, 'name_by_user').split(':')[1]}}"

- alias: Posted
  id: letter-box-posted
  description: ""
  trigger:
    - type: opened
      platform: device
      device_id: ddbed06ae111b1c0b36ce30d9a8d7b25
      entity_id: binary_sensor.letter_box_iaszone
      domain: binary_sensor
  condition: []
  action:
    - service: notify.mobile_app_pixel_6
      data:
        message: Something has been posted
    - service: tts.google_translate_say
      data:
        entity_id: media_player.living_room_speaker
        message: Something has been posted
  mode: single

- id: maintenance-required
  alias: Maintenance is Required
  description: ""
  mode: single
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.maintenance_required
      to: "on"
    - platform: time
      at: "18:00:00"
  condition:
    - condition: state
      entity_id: binary_sensor.maintenance_required
      state: "on"
    - condition: zone
      entity_id: person.harry
      zone: zone.home
  action:
    - service: notify.mobile_app_pixel_6
      data:
        message: Maintenance is required

- id: becca-medicine
  alias: Becca Medicine
  trigger:
    - platform: time
      at: "18:10:00"
    - platform: zone
      entity_id: person.becca
      zone: zone.cat_sanctuary
      event: enter
  condition:
    - condition: time
      after: "18:10:00"
    - condition: template
      value_template: "{{(strptime(states('input_datetime.becca_medicine'), '%Y-%m-%d').day) != now().day}}"
  action:
    - service: notify.mobile_app_pixel_6a
      data:
        message: Take Medicine 💊
        data:
          tag: becca_medicine
          ttl: 0
          priority: high
          actions:
            - action: TAKEN
              title: Taken

- alias: Update Becca Medicine From Notification
  id: update-becca-medicine-notification
  description: ""
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: TAKEN
    - platform: tag
      tag_id: datetime.set:input_datetime.becca_medicine
  action:
    - service: input_datetime.set_datetime
      data_template:
        datetime: '{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}'
      target:
        entity_id: input_datetime.becca_medicine
    - service: notify.mobile_app_pixel_6a
      data:
        message: "clear_notification"
        data:
          tag: "becca_medicine"

- id: "message-becca-home"
  alias: "Message becca when I travel home"
  trigger:
    - platform: zone
      entity_id: person.harry
      zone: zone.cat_sanctuary
      event: leave
  action:
    - wait_for_trigger:
        - platform: zone
          entity_id: person.harry
          zone: zone.home
          event: enter
      continue_on_timeout: false
      timeout:
        hours: 2
        minutes: 0
        seconds: 0
        milliseconds: 0
    - service: notify.mobile_app_pixel_6
      data:
        message: Message Becca I am home?
        data:
          ttl: 0
          priority: high
          actions:
            - action: MESSAGE_BECCA_HOME
              title: "Yes"
    - wait_for_trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: MESSAGE_BECCA_HOME
      timeout:
        hours: 1
        minutes: 0
        seconds: 0
        milliseconds: 0
      continue_on_timeout: false
    - service: notify.mobile_app_pixel_6a
      data:
        message: Harry is home


- alias: "Protect Hotspot Data"
  id: protect-hotspot
  description: "Send notifications when I should not be using a hotspot"
  mode: single
  trigger:
    - platform: zone
      entity_id: person.harry
      zone: zone.work
      event: enter
    - platform: zone
      entity_id: person.harry
      zone: zone.home
      event: enter
    - platform: state
      entity_id:
        - sensor.work_laptop_ssid
  condition:
    - condition: state
      entity_id: sensor.work_laptop_ssid
      state: Pixel_7293
    - condition: or
      conditions:
        - condition: zone
          entity_id: person.harry
          zone: zone.home
        - condition: zone
          entity_id: person.harry
          zone: zone.work
      alias: Test if Harry is at Work or Home
  action:
    - service: notify.mobile_app_pixel_6
      data:
        message: Turn Off Hotspot
    - service: notify.mobile_app_ipad
      data:
        message: Turn off Hotspot
- id: 'clothes-tag-scanned'
  alias: Clothes Tag Scanned
  description: Increment counters for clothes
  trigger:
    - platform: event
      event_type: tag_scanned
  condition:
    - condition: template
      value_template: '{{ trigger.event.data.tag_id.startswith(''clothes_'') }}'
  action:
    - service: counter.increment
      data: {}
      target:
        entity_id: counter.{{ trigger.event.data.tag_id }}_total_worn
    - service: counter.increment
      data: {}
      target:
        entity_id: counter.{{ trigger.event.data.tag_id }}_since_wash
  mode: single
- id: 'clothes-wash-notification'
  alias: Clothes Wash Notification
  description: ''
  trigger:
    - platform: numeric_state
      entity_id: counter.clothes_black_jeans_since_wash
      above: 10
    - platform: numeric_state
      entity_id: counter.clothes_dark_red_jumper_since_wash
      above: 10
    - platform: numeric_state
      entity_id: counter.clothes_woolly_hoodie_jumper_since_wash
      above: 20
    - platform: numeric_state
      entity_id: counter.clothes_grey_jumper_since_wash
      above: 10
    - platform: numeric_state
      entity_id: counter.clothes_green_jumper_since_wash
      above: 10
    - platform: numeric_state
      entity_id: counter.clothes_booking_hoodie_since_wash
      above: 10
  condition: []
  action:
    - service: notify.mobile_app_pixel_6
      data_template:
        message: '{{ trigger.from_state.attributes.friendly_name[8:][:13] }}'
      data:
        data:
          tag: clothes_wash
          ttl: 0
          priority: high
          actions:
            - action: WASHED
              title: Washed
        title: Time to wash
    - wait_for_trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: WASHED
      timeout:
        hours: 0
        minutes: 3
        seconds: 0
        milliseconds: 0
      continue_on_timeout: false
    - service: counter.reset
      data: {}
      target:
        entity_id: '{{ trigger.entity_id }}'
  mode: single
