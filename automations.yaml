- id: config-git-updated
  alias: 'Config Git Repo Updated'
  trigger:
    - platform: webhook
      webhook_id: "some_hook_id"
  action:
    - delay: '00:00:15'
    - service: shell_command.git_pull_config
    - service: automation.reload
    - service: group.reload
    - service: input_datetime.reload
    - service: template.reload
    - service: timer.reload
    - service: logbook.log
      data_template:
        name: "Config Git Repository Updated: "
        message: "{{trigger.to_state.name}} changed from {{trigger.from_state.state}} to {{trigger.to_state.state}} by {{ trigger.to_state.attributes.source }}"
    - service: notify.persistent_notification
      data_template:
        title: Config Reloaded
        message: Configuration reloaded from git repository

- id: hall-sensor
  mode: restart
  alias: Hall Sensor
  trigger:
    - type: motion
      platform: device
      entity_id: binary_sensor.hms1_motion
      device_id: 381d86e848b74e791ccbc32aa58ddb90
      domain: binary_sensor
  condition:
    - condition: sun
      after: sunset
  action:
    - service: light.turn_on
      target:
        area_id: hall
    - delay: "00:04:00"
    - service: light.turn_off
      target:
        area_id: hall

- id: "leave-home"
  alias: "Leave Home"
  mode: single
  trigger:
    - platform: zone
      entity_id: person.harry
      zone: zone.home
      event: leave
  action:
    - service: light.turn_off
      target:
        entity_id: all
    - service: switch.turn_off
      target:
        entity_id: all

- id: return-home
  alias: Return Home After Sunset
  trigger:
    - platform: zone
      entity_id: person.harry
      zone: zone.home
      event: enter
  condition:
    - condition: sun
      after: sunset
  action:
    - service: light.turn_on
      target:
        entity_id: light.living_room_ceiling_group
    - service: light.turn_on
      target:
        entity_id: light.hand_lamp
    - service: light.turn_on
      target:
        area_id: hall
- id: sunset
  alias: Sunset
  trigger:
    platform: sun
    event: sunset
  condition:
    - condition: zone
      entity_id: person.harry
      zone: zone.home
  action:
    - service: light.turn_on
      target:
        entity_id: light.living_room_ceiling_group
    - service: light.turn_on
      target:
        entity_id: light.hand_lamp
    - service: light.turn_on
      target:
        entity_id: light.ol1

- id: turn-off-night
  alias: Turn Everything off At Night
  trigger:
    platform: time
    at: "00:00:00"
  action:
    - service: light.turn_off
      entity_id: all
    - service: switch.turn_off
      entity_id: all

- id: work-event-start
  alias: Work Event Started
  trigger:
    platform: calendar
    event: start
    offset: "-0:0:0"
    entity_id: calendar.harry_martland_booking_com
  condition:
    - condition: zone
      entity_id: person.harry
      zone: zone.home
  action:
    service: tts.google_translate_say
    data:
      entity_id: media_player.living_room_speaker
      cache: true
      message: Next meeting starting now
- id: low-battery
  alias: Low battery level detection & notification for all battery sensors
  description: ''
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      actions:
        - service: notify.notify
          data:
            message: '{{sensors}} is low battery please replace'
            title: Low Battery {{sensors}}

- id: remote-backup
  alias: Remote Backup
  trigger:
    platform: state
    entity_id:
      - schedule.backup
    attribute: next_event
  action:
    - service: hassio.backup_full

- id: on-tv-when-start-playing
  alias: Turn on tv when start playing
  description: ""
  trigger:
    - platform: device
      device_id: a1a0f5a1ab03578cb054a97ed13f2308
      domain: media_player
      entity_id: media_player.living_room_tv
      type: playing
  condition:
    condition: device
    type: is_off
    device_id: 6b00183c77229c552960226987b6c38d
    entity_id: switch.tv
    domain: switch
  action:
    - type: turn_on
      device_id: 6b00183c77229c552960226987b6c38d
      entity_id: switch.tv
      domain: switch
  mode: single

- id: stop-casting-tv-off
  alias: "Stop casting when tv is turn off"
  mode: single
  trigger:
    - platform: device
      type: turned_off
      device_id: 6b00183c77229c552960226987b6c38d
      entity_id: switch.tv
      domain: switch
  action:
    - service: media_player.turn_off
      data: {}
      target:
        device_id: a1a0f5a1ab03578cb054a97ed13f2308

- id: "bed-time"
  alias: "Bed Time"
  description: "Bed time, turn on bedroom side lights"
  mode: single
  trigger:
    - platform: time
      at: "22:00:00"
  condition:
    - condition: zone
      entity_id: person.harry
      zone: zone.home
  action:
    - service: light.turn_on
      target:
        entity_id: light.bedroom_side_lamp_group
    - service: light.turn_off
      target:
        entity_id: light.hand_lamp

- id: 'update-last-vacuumed'
  alias: 'Update Last Vacuumed'
  description: ''
  trigger:
    - platform: state
      entity_id:
        - vacuum.becki
      to: docked
  condition: []
  action:
    - service: input_datetime.set_datetime
      data_template:
        datetime: '{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}'
      target:
        entity_id: input_datetime.last_vacuumed
  mode: single

- id: 'vacuum-2-days'
  alias: Vacuum Every 2 Days when Out the House
  description: ''
  trigger:
    - platform: zone
      entity_id: person.harry
      zone: zone.home
      event: leave
  condition:
    - condition: template
      value_template: '{{now().timestamp() > (strptime(states(''input_datetime.last_vacuumed''),
    "%Y-%m-%d %H:%M:%S")+ timedelta(days=2)).timestamp() }}'
  action:
    - service: vacuum.start
      data: {}
      target:
        entity_id: vacuum.becki
  mode: single

- id: restart-timer-tag-scanned
  alias: Restart Timer Tag Scanned
  description: ""
  trigger:
    - platform: event
      event_type: tag_scanned
  condition:
    - condition: template
      value_template: "{{ trigger.event.data.tag_id.startswith('timer.start:') }}"
  action:
    - service: timer.start
      data: {}
      target:
        entity_id: "{{ trigger.event.data.tag_id[12:] }}"
  mode: single

- id: date-time-tag-scanned
  alias: Date Time Tag Scanned
  description: "Set a date time value when scanned"
  trigger:
    - platform: event
      event_type: tag_scanned
  condition:
    - condition: template
      value_template: "{{ trigger.event.data.tag_id.startswith('datetime.set:') }}"
  action:
    - service: input_datetime.set_datetime
      data_template:
        datetime: '{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}'
      target:
        entity_id: "{{ trigger.event.data.tag_id[13:] }}"
  mode: single

- alias: "Automatically update core patches"
  id: auto-update-core-patches
  mode: single
  trigger:
    - platform: state
      entity_id:
        - update.home_assistant_core_update
      attribute: latest_version
    - platform: homeassistant
      event: start
  condition:
    - condition: template
      value_template: >+
        {%set installed = state_attr("update.home_assistant_core_update", "installed_version").split(".") %}
        {%set latest = state_attr("update.home_assistant_core_update", "latest_version").split(".") %}
        {{installed[0] == latest[0] and installed[1] == latest[1] and installed[2] != latest[2]}}
  action:
    - service: notify.notify
      data:
        message: HA Core Will be updated at 2AM
    - wait_for_trigger:
        - platform: time
          at: "03:00:00"
      continue_on_timeout: true
      timeout:
        hours: 30
        minutes: 0
        seconds: 0
        milliseconds: 0
    - service: update.install
      data:
        backup: true
      target:
        entity_id: update.home_assistant_core_update
    - service: notify.notify
      data:
        message: HA Core has been updated

- alias: "Automatically update OS patches"
  id: auto-update-os-patches
  mode: single
  trigger:
    - platform: state
      entity_id:
        - update.home_assistant_operating_system_update
      attribute: latest_version
    - platform: homeassistant
      event: start
  condition:
    - condition: template
      value_template: >+
        {%set installed = state_attr("update.home_assistant_operating_system_update", "installed_version").split(".") %}
        {%set latest = state_attr("update.home_assistant_operating_system_update", "latest_version").split(".") %}
        {{installed[0] == latest[0] and installed[1] != latest[1]}}
  action:
    - service: notify.notify
      data:
        message: HA OS Will be updated at 2AM
    - wait_for_trigger:
        - platform: time
          at: "02:00:00"
      continue_on_timeout: true
      timeout:
        hours: 30
        minutes: 0
        seconds: 0
        milliseconds: 0
    - service: update.install
      target:
        entity_id: update.home_assistant_operating_system_update
    - service: notify.notify
      data:
        message: HA OS has been updated

- id: washing-machine-finished
  alias: "Notify that the washing machine has finished"
  mode: single
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.washing_machine
  action:
    - service: notify.notify
      data:
        message: Washing Machine has Finished
        data:
          ttl: 0
          priority: high
    - service: tts.google_translate_say
      data:
        entity_id: media_player.living_room_speaker
        cache: true
        message: The washing machine has finished

- alias: ZHA On Off Button pressed
  id: "zha-on-off-button-pressed"
  mode: queued
  max: 10
  trigger:
    - platform: event
      event_type: zha_event
      event_data:
        command: "on"
    - platform: event
      event_type: zha_event
      event_data:
        command: "off"
  condition:
    - condition: template
      value_template: "{{device_attr(trigger.event.data.device_id, 'name_by_user').startswith('SW')}}"
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: "{{trigger.event.data.command == \"on\"}}"
              alias: "On"
          sequence:
            - service: light.turn_on
              target:
                entity_id: "{{device_attr(trigger.event.data.device_id, 'name_by_user').split(':')[1]}}"
        - conditions:
            - condition: template
              value_template: "{{trigger.event.data.command == \"off\"}}"
              alias: "Off"
          sequence:
            - service: light.turn_off
              target:
                entity_id: "{{device_attr(trigger.event.data.device_id, 'name_by_user').split(':')[1]}}"

- alias: Posted
  description: ""
  trigger:
    - type: opened
      platform: device
      device_id: ddbed06ae111b1c0b36ce30d9a8d7b25
      entity_id: binary_sensor.letter_box_iaszone
      domain: binary_sensor
  condition: []
  action:
    - service: notify.notify
      data:
        message: Something has been posted
    - service: tts.google_translate_say
      data:
        entity_id: media_player.living_room_speaker
        message: Something has been posted
  mode: single
